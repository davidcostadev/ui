{"version":3,"file":"formatNumberToCurrency.js","sources":["../../../src/lib/formatNumberToCurrency.ts"],"sourcesContent":["export const formatNumberToCurrency = (\n  value: number,\n  lang: string,\n  currency: string,\n  noDecimal: boolean = false\n): string => {\n  const separatorDecimal = new Intl.NumberFormat(lang, {\n    style: 'decimal',\n  })\n    .format(11.11)\n    .replace(/\\d/g, '');\n\n  const withDecimal = noDecimal ? parseInt(value.toFixed(0), 10) : value;\n\n  const currencyNumber = new Intl.NumberFormat(lang, { style: 'currency', currency }).format(\n    withDecimal\n  );\n\n  if (noDecimal) {\n    const [onlyNoDecimal] = currencyNumber.split(separatorDecimal);\n    return onlyNoDecimal;\n  }\n\n  return currencyNumber;\n};\n\nexport default formatNumberToCurrency;\n"],"names":["formatNumberToCurrency","value","lang","currency","noDecimal","separatorDecimal","Intl","NumberFormat","style","format","replace","withDecimal","parseInt","toFixed","currencyNumber","_a","__read","split","onlyNoDecimal"],"mappings":";;IAAaA,sBAAsB,GAAG,UACpCC,KADoC,EAEpCC,IAFoC,EAGpCC,QAHoC,EAIpCC,SAJoC;AAIpC,0BAAA,EAAA;AAAAA,IAAAA,iBAAA;;;AAEA,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBL,IAAtB,EAA4B;AACnDM,IAAAA,KAAK,EAAE;AAD4C,GAA5B,EAGtBC,MAHsB,CAGf,KAHe,EAItBC,OAJsB,CAId,KAJc,EAIP,EAJO,CAAzB;AAMA,MAAMC,WAAW,GAAGP,SAAS,GAAGQ,QAAQ,CAACX,KAAK,CAACY,OAAN,CAAc,CAAd,CAAD,EAAmB,EAAnB,CAAX,GAAoCZ,KAAjE;AAEA,MAAMa,cAAc,GAAG,IAAIR,IAAI,CAACC,YAAT,CAAsBL,IAAtB,EAA4B;AAAEM,IAAAA,KAAK,EAAE,UAAT;AAAqBL,IAAAA,QAAQ;AAA7B,GAA5B,EAA6DM,MAA7D,CACrBE,WADqB,CAAvB;;AAIA,MAAIP,SAAJ,EAAe;AACP,QAAAW,KAAAC,OAAkBF,cAAc,CAACG,KAAf,CAAqBZ,gBAArB,KAAlB;AAAA,QAACa,aAAa,QAAd;;AACN,WAAOA,aAAP;AACD;;AAED,SAAOJ,cAAP;AACD;;;;"}